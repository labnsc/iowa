{"version":3,"sources":["helpers/lineHelpers.js","helpers/convertTriggers.js","helpers/sanitizeTriggers.js","helpers/winAndLoss.js","helpers/parseInThree.js","helpers/behavioralData.js","helpers/fileHelpers.js","App.js","index.js","logo.svg"],"names":["isLineWithoutStimulus","line","match","stimulusCode","replaceLineWithCode","code","replace","concat","convertTriggers","contents","mapper","66","index","count","112","77","123","88","134","99","145","lines","split","output","forEach","hasOwnProperty","newCode","parsedLine","CODES_TO_CHANGE","CODES_MAP","111","122","133","144","sanitizeTriggers","includes","changedLine","LOSSES","POST_LOSSES","CARD_TO_CODE_LOSS","1","3","5","7","CARD_TO_CODE_WIN","POST_CARD_TO_CODE_LOSS","2","4","6","8","parsedLineWithCode","winAndLoss","parseInt","codeFirstNum","toString","indexOf","CODES_SECOND_BLOCK_POST","51","61","71","81","CODES_THIRD_BLOCK_POST","parseInThree","trialCount","A_LOSSES","9","11","13","14","16","17","20","22","24","25","26","30","32","33","36","37","B_LOSSES","C_LOSSES","12","19","23","28","29","34","38","39","D_LOSSES","computeLoss","numCard","losses","behavioralData","data","numA","numB","numC","numD","balance","balancePart1","balancePart2","balancePart3","rawCard","trim","numAPart1","numBPart1","numCPart1","numDPart1","numAPart2","numBPart2","numCPart2","numDPart2","numAPart3","numBPart3","numCPart3","numDPart3","computeBalanceAndCardsForPart","getSubjectNumber","fileName","parseOnSteroids","downloadZip","zip","generateAsync","type","then","content","FileSaver","saveAs","App","handleFiles","parser","event","JSZip","filesArray","Array","from","target","files","processed","file","reader","FileReader","onload","parsedContents","result","name","length","readAsText","handleBehaviorFiles","join","subjectNumber","blob","Blob","react_default","a","createElement","className","src","logo","alt","id","multiple","onChange","this","Component","ReactDOM","render","src_App_0","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"8OAAaA,EAAwB,SAAAC,GAAI,OAAKA,EAAKC,MAAM,cAC5CC,EAAe,SAAAF,GAAI,OAAIA,EAAKC,MAAM,aAAa,IAE/CE,EAAsB,SAACH,EAAMI,GAAP,OAAgBJ,EAAKK,QAAQ,UAAb,IAAAC,OAA4BF,KC8DhEG,EA3BS,SAAAC,GACtB,IAAMC,EArCkB,CACxBC,GAAM,CACJC,MAAO,IACPC,MAAO,GAETC,IAAO,CACLF,MAAO,IACPC,MAAO,GAETE,GAAM,CACJH,MAAO,IACPC,MAAO,GAETG,IAAO,CACLJ,MAAO,IACPC,MAAO,GAETI,GAAM,CACJL,MAAO,IACPC,MAAO,GAETK,IAAO,CACLN,MAAO,IACPC,MAAO,GAETM,GAAM,CACJP,MAAO,IACPC,MAAO,GAETO,IAAO,CACLR,MAAO,IACPC,MAAO,IAOHQ,EAAQZ,EAASa,MAAM,MACzBC,EAAS,GAqBb,OAnBAF,EAAMG,QAAQ,SAAAvB,GACZ,GAAID,EAAsBC,GACxBsB,GAAM,GAAAhB,OAAON,EAAP,UADR,CAKA,IAAMI,EAAOF,EAAaF,GAE1B,GAAIS,EAAOe,eAAepB,GAAO,CAC/B,IAAMqB,EAAUhB,EAAOL,GAAMO,MAAQF,EAAOL,GAAMQ,MAClDH,EAAOL,GAAMQ,OAAS,EAEtB,IAAMc,EAAavB,EAAoBH,EAAMyB,GAC7CH,GAAM,GAAAhB,OAAOoB,EAAP,WAENJ,GAAM,GAAAhB,OAAON,EAAP,SAIHsB,GCxDHK,EAAkB,CAAC,MAAO,MAAO,MAAO,OAExCC,EAAY,CAChBC,IAAO,KACPC,IAAO,KACPC,IAAO,KACPC,IAAO,MA0BMC,EAvBU,SAAAzB,GACvB,IAAMY,EAAQZ,EAASa,MAAM,MACzBC,EAAS,GAkBb,OAhBAF,EAAMG,QAAQ,SAAAvB,GACZ,GAAID,EAAsBC,GACxBsB,GAAM,GAAAhB,OAAON,EAAP,UADR,CAKA,IAAMI,EAAOF,EAAaF,GAC1B,GAAI2B,EAAgBO,SAAS9B,GAA7B,CACE,IAAM+B,EAAchC,EAAoBH,EAAM4B,EAAUxB,IACxDkB,GAAM,GAAAhB,OAAO6B,EAAP,WAIRb,GAAM,GAAAhB,OAAON,EAAP,SAGDsB,GCjCHc,EAAS,CACb,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAGIC,EAAc,CAClB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAIIC,EAAoB,CACxBC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,MAGCC,EAAmB,CACvBJ,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,MAGCE,EAAyB,CAC7BC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,MAGCC,EAAqB,SAACjD,EAAMI,GAChC,IAAMsB,EAAavB,EAAoBH,EAAMI,GAC7C,SAAAE,OAASoB,EAAT,OAiDawB,EA9CI,SAAA1C,GACjB,IAAMY,EAAQZ,EAASa,MAAM,MACzBC,EAAS,GAyCb,OAvCAF,EAAMG,QAAQ,SAAAvB,GACZ,GAAID,EAAsBC,GACxBsB,GAAM,GAAAhB,OAAON,EAAP,UADR,CAKA,IAAMI,EAAO+C,SAASjD,EAAaF,GAAO,IACpCoD,EAAehD,EAAKiD,WAAW,GAErC,IAA8B,IAA1BjB,EAAOkB,QAAQlD,GAKnB,IAAmC,IAA/BiC,EAAYiB,QAAQlD,GAAxB,CAKA,GAAIA,GAAQ,IAAM,CAChB,IAAmD,IAAhD,CAAC,IAAK,IAAK,IAAK,KAAKkD,QAAQF,GAE9B,YADA9B,GAAU2B,EAAmBjD,EAAM2C,EAAiBS,KAItD,IAAmD,IAAhD,CAAC,IAAK,IAAK,IAAK,KAAK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","file":"static/js/main.6f0fa6d1.chunk.js","sourcesContent":["export const isLineWithoutStimulus = line => !line.match(/^Mk\\d+=S/i);\nexport const stimulusCode = line => line.match(/S\\s*(\\d+)/)[1];\nexport const stimulusTime = line => line.match(/S\\s*\\d+,(\\d+)/)[1];\nexport const replaceLineWithCode = (line, code) => line.replace(/S\\s*\\d+/, `S${code}`);\nexport const replaceLineWithTime = (line, time) => line.replace(/,\\d{3,},/, `,${time},`);\n","import { isLineWithoutStimulus, stimulusCode, replaceLineWithCode } from './lineHelpers';\n\nconst initMapper = () => ({\n  '66': {\n    index: 1000,\n    count: 0\n  },\n  '112': {\n    index: 2000,\n    count: 0\n  },\n  '77': {\n    index: 3000,\n    count: 0\n  },\n  '123': {\n    index: 4000,\n    count: 0\n  },\n  '88': {\n    index: 5000,\n    count: 0\n  },\n  '134': {\n    index: 6000,\n    count: 0,\n  },\n  '99': {\n    index: 7000,\n    count: 0\n  },\n  '145': {\n    index: 8000,\n    count: 0\n  }\n});\n\n\nconst convertTriggers = contents => {\n  const mapper = initMapper();\n  const lines = contents.split(\"\\n\");\n  let output = '';\n\n  lines.forEach(line => {\n    if (isLineWithoutStimulus(line)) {\n      output += `${line}\\n`;\n      return;\n    }\n\n    const code = stimulusCode(line);\n\n    if (mapper.hasOwnProperty(code)) {\n      const newCode = mapper[code].index + mapper[code].count;\n      mapper[code].count += 1;\n\n      const parsedLine = replaceLineWithCode(line, newCode);\n      output += `${parsedLine}\\n`;\n    } else {\n      output += `${line}\\n`;\n    }\n  });\n\n  return output;\n};\n\nexport default convertTriggers;\n","import {\n  isLineWithoutStimulus,\n  stimulusCode,\n  replaceLineWithCode,\n} from './lineHelpers';\n\nconst CODES_TO_CHANGE = ['111', '122', '133', '144'];\n\nconst CODES_MAP = {\n  '111': '66',\n  '122': '77',\n  '133': '88',\n  '144': '99',\n};\n\nconst sanitizeTriggers = contents => {\n  const lines = contents.split('\\n');\n  let output = '';\n\n  lines.forEach(line => {\n    if (isLineWithoutStimulus(line)) {\n      output += `${line}\\n`;\n      return;\n    }\n\n    const code = stimulusCode(line);\n    if (CODES_TO_CHANGE.includes(code)) {\n      const changedLine = replaceLineWithCode(line, CODES_MAP[code]);\n      output += `${changedLine}\\n`;\n      return;\n    }\n\n    output += `${line}\\n`;\n  });\n\n  return output;\n};\n\nexport default sanitizeTriggers;\n","import { isLineWithoutStimulus, stimulusCode, replaceLineWithCode } from './lineHelpers';\n\nconst LOSSES = [\n  1002,\n  1004,\n  1006,\n  1008,\n  1009,\n  1011,\n  1013,\n  1014,\n  1016,\n  1017,\n  1020,\n  1022,\n  1024,\n  1025,\n  1026,\n  1030,\n  1032,\n  1033,\n  1036,\n  1037,\n  3008,\n  3013,\n  3020,\n  3032,\n  5002,\n  5004,\n  5006,\n  5008,\n  5009,\n  5011,\n  5012,\n  5016,\n  5017,\n  5019,\n  5023,\n  5024,\n  5025,\n  5028,\n  5029,\n  5033,\n  5034,\n  5036,\n  5038,\n  5039,\n  7009,\n  7019,\n  7028,\n  7034,\n];\n\nconst POST_LOSSES = [\n  2002,\n  2004,\n  2006,\n  2008,\n  2009,\n  2011,\n  2013,\n  2014,\n  2016,\n  2017,\n  2020,\n  2022,\n  2024,\n  2025,\n  2026,\n  2030,\n  2032,\n  2033,\n  2036,\n  2037,\n  4008,\n  4013,\n  4020,\n  4032,\n  6002,\n  6004,\n  6006,\n  6008,\n  6009,\n  6011,\n  6012,\n  6016,\n  6017,\n  6019,\n  6023,\n  6024,\n  6025,\n  6028,\n  6029,\n  6033,\n  6034,\n  6036,\n  6038,\n  6039,\n  8009,\n  8019,\n  8028,\n  8034,\n];\n\n// 1 = A, 3 = B, 5 = C, 7 = D\nconst CARD_TO_CODE_LOSS = {\n  1: '15',\n  3: '16',\n  5: '17',\n  7: '18',\n};\n\nconst CARD_TO_CODE_WIN = {\n  1: '11',\n  3: '12',\n  5: '13',\n  7: '14',\n};\n\nconst POST_CARD_TO_CODE_LOSS = {\n  2: '51',\n  4: '51',\n  6: '61',\n  8: '61',\n};\n\nconst parsedLineWithCode = (line, code) => {\n  const parsedLine = replaceLineWithCode(line, code);\n  return`${parsedLine}\\n`;\n};\n\nconst winAndLoss = contents => {\n  const lines = contents.split(\"\\n\");\n  let output = '';\n\n  lines.forEach(line => {\n    if (isLineWithoutStimulus(line)) {\n      output += `${line}\\n`;\n      return;\n    }\n\n    const code = parseInt(stimulusCode(line), 10);\n    const codeFirstNum = code.toString()[0];\n\n    if (LOSSES.indexOf(code) !== -1) {\n      output += parsedLineWithCode(line, CARD_TO_CODE_LOSS[codeFirstNum]);\n      return;\n    }\n\n    if (POST_LOSSES.indexOf(code) !== -1) {\n      output += parsedLineWithCode(line, POST_CARD_TO_CODE_LOSS[codeFirstNum]);\n      return;\n    }\n\n    if (code >= 1000) {\n      if([\"1\", \"3\", \"5\", \"7\"].indexOf(codeFirstNum) !== -1) {\n        output += parsedLineWithCode(line, CARD_TO_CODE_WIN[codeFirstNum]);\n        return;\n      }\n\n      if([\"2\", \"4\", \"6\", \"8\"].indexOf(codeFirstNum) !== -1) {\n        if(codeFirstNum === \"2\" || codeFirstNum === \"4\") {\n          output += parsedLineWithCode(line, 71); // WIN Disadvantageous [POST]\n          return;\n        } else {\n          output += parsedLineWithCode(line, 81); // WIN Advantageous [POST]\n          return;\n        }\n      }\n    }\n\n    output += `${line}\\n`;\n  });\n\n  return output;\n};\n\nexport default winAndLoss;\n","import { isLineWithoutStimulus, stimulusCode, replaceLineWithCode } from './lineHelpers';\n\n\nconst CODES_TO_CHANGE = ['11', '12', '13', '14', '15', '16', '17', '18'];\n\nconst CODES_SECOND_BLOCK_POST = {\n  '51': '52',\n  '61': '62',\n  '71': '72',\n  '81': '82',\n};\n\nconst CODES_THIRD_BLOCK_POST = {\n  '51': '53',\n  '61': '63',\n  '71': '73',\n  '81': '83',\n};\n\nconst parseInThree = contents => {\n  let trialCount = 0;\n  const lines = contents.split(\"\\n\");\n  let output = '';\n\n  lines.forEach(line => {\n    if (isLineWithoutStimulus(line)) {\n      output += `${line}\\n`;\n      return;\n    }\n    const code = stimulusCode(line);\n\n    if (CODES_TO_CHANGE.includes(code)) {\n      trialCount++;\n      let newCode = parseInt(code, 10);\n\n      if (trialCount > 50 && trialCount <= 100) {\n        newCode += 10;\n      }\n\n      if (trialCount > 100) {\n        newCode += 20;\n      }\n\n      const parsedLine = replaceLineWithCode(line, newCode);\n      output += `${parsedLine}\\n`;\n    }\n    else if (['51', '61', '71', '81'].includes(code)) {\n      let newCode = code;\n\n      if (trialCount > 50 && trialCount <= 100) {\n        newCode = CODES_SECOND_BLOCK_POST[code];\n      }\n\n      if (trialCount > 100) {\n        newCode = CODES_THIRD_BLOCK_POST[code];\n      }\n\n      const parsedLine = replaceLineWithCode(line, newCode);\n      output += `${parsedLine}\\n`;\n    }\n    else {\n      output += `${line}\\n`;\n    }\n  });\n\n  return output;\n};\n\nexport default parseInThree;\n","const INITIAL_BALANCE = 2000;\nconst A_OR_B_WIN = 100;\nconst C_OR_D_WIN = 50;\n\nconst A_LOSSES = {\n  2: 150,\n  4: 300,\n  6: 200,\n  8: 250,\n  9: 350,\n  11: 350,\n  13: 250,\n  14: 200,\n  16: 300,\n  17: 150,\n  20: 300,\n  22: 350,\n  24: 200,\n  25: 250,\n  26: 150,\n  30: 350,\n  32: 200,\n  33: 250,\n  36: 150,\n  37: 300,\n};\n\nconst B_LOSSES = {\n  8: 1250,\n  13: 1250,\n  20: 1250,\n  32: 1250,\n};\n\nconst C_LOSSES = {\n  2: 50,\n  4: 50,\n  6: 50,\n  8: 50,\n  9: 50,\n  11: 25,\n  12: 75,\n  16: 25,\n  17: 75,\n  19: 50,\n  23: 50,\n  24: 25,\n  25: 50,\n  28: 75,\n  29: 50,\n  33: 25,\n  34: 25,\n  36: 75,\n  38: 50,\n  39: 75,\n};\n\nconst D_LOSSES = {\n  9: 250,\n  19: 250,\n  28: 250,\n  34: 250,\n};\n\nconst computeLoss = (numCard, losses) =>\n  losses.hasOwnProperty(numCard) ? losses[numCard] : 0;\n\nconst initData = () => ({\n  numA: 0,\n  numB: 0,\n  numC: 0,\n  numD: 0,\n  balance: INITIAL_BALANCE,\n  balancePart1: 0,\n  balancePart2: 0,\n  balancePart3: 0,\n});\n\nconst computeBalanceAndCardsForPart = (index, data) => {\n  if (index === 49) {\n    data.balancePart1 = data.balance;\n    data.numAPart1 = data.numA;\n    data.numBPart1 = data.numB;\n    data.numCPart1 = data.numC;\n    data.numDPart1 = data.numD;\n  }\n\n  if (index === 99) {\n    data.balancePart2 = data.balance;\n    data.numAPart2 = data.numA - data.numAPart1;\n    data.numBPart2 = data.numB - data.numBPart1;\n    data.numCPart2 = data.numC - data.numCPart1;\n    data.numDPart2 = data.numD - data.numDPart1;\n  }\n\n  if (index === 149) {\n    data.balancePart3 = data.balance;\n    data.numAPart3 = data.numA - data.numAPart1 - data.numAPart2;\n    data.numBPart3 = data.numB - data.numBPart1 - data.numBPart2;\n    data.numCPart3 = data.numC - data.numCPart1 - data.numCPart2;\n    data.numDPart3 = data.numD - data.numDPart1 - data.numDPart2;\n  }\n};\n\nconst behavioralData = contents => {\n  const data = initData();\n  const lines = contents.split(\"\\n\");\n\n  lines.forEach((line, index) => {\n    const rawCard = line.split(\",\")[1];\n    const card = rawCard ? rawCard.trim() : rawCard;\n\n    switch (card) {\n      case \"A\":\n        data.balance += A_OR_B_WIN;\n        data.balance -= computeLoss(data.numA, A_LOSSES);\n        data.numA++;\n        break;\n      case \"B\":\n        data.balance += A_OR_B_WIN;\n        data.balance -= computeLoss(data.numB, B_LOSSES);\n        data.numB++;\n        break;\n      case \"C\":\n        data.balance += C_OR_D_WIN;\n        data.balance -= computeLoss(data.numC, C_LOSSES);\n        data.numC++;\n        break;\n      case \"D\":\n        data.balance += C_OR_D_WIN;\n        data.balance -= computeLoss(data.numD, D_LOSSES);\n        data.numD++;\n        break;\n      default:\n        break;\n    }\n\n    computeBalanceAndCardsForPart(index, data);\n  });\n\n  return data;\n};\n\nexport default behavioralData;\n","export const getSubjectNumber = fileName =>\n `MJ${fileName.split(\"-\")[0]}`;\n","import React, { Component } from 'react';\nimport JSZip from 'jszip';\nimport FileSaver from 'file-saver';\n\nimport convertTriggers from './helpers/convertTriggers';\nimport sanitizeTriggers from './helpers/sanitizeTriggers';\nimport winAndLoss from './helpers/winAndLoss';\nimport parseInThree from './helpers/parseInThree';\nimport behavioralData from './helpers/behavioralData';\nimport { getSubjectNumber } from './helpers/fileHelpers';\nimport logo from './logo.svg';\n\nimport './App.css';\n\nexport const parseOnSteroids = contents =>\n  parseInThree(winAndLoss(convertTriggers(sanitizeTriggers(contents))));\n\nconst downloadZip = zip =>\n  zip.generateAsync({ type: \"blob\" })\n    .then(content => FileSaver.saveAs(content, \"iowa-parsed.zip\"));\n\nclass App extends Component {\n  handleFiles = parser => event => {\n    const zip = new JSZip();\n    const filesArray = Array.from(event.target.files);\n    let processed = 0;\n\n    filesArray.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const parsedContents = parser(reader.result);\n        zip.file(file.name, parsedContents);\n        processed++;\n\n        if (filesArray.length === processed) downloadZip(zip);\n      };\n      reader.readAsText(file);\n    });\n  };\n\n  handleBehaviorFiles = event => {\n    const filesArray = Array.from(event.target.files);\n    let processed = 0;\n    let content = [\n      'Subject',\n      'Balance',\n      'Balance-Block-1',\n      'Balance-Block-2',\n      'Balance-Block-3',\n      'Card-A',\n      'Card-A-Block-1',\n      'Card-A-Block-2',\n      'Card-A-Block-3',\n      'Card-B',\n      'Card-B-Block-1',\n      'Card-B-Block-2',\n      'Card-B-Block-3',\n      'Card-C',\n      'Card-C-Block-1',\n      'Card-C-Block-2',\n      'Card-C-Block-3',\n      'Card-D',\n      'Card-D-Block-1',\n      'Card-D-Block-2',\n      'Card-D-Block-3',\n    ].join(',');\n    content += \"\\n\";\n\n    filesArray.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const subjectNumber = getSubjectNumber(file.name);\n        const data = behavioralData(reader.result);\n        content += [\n          subjectNumber,\n          data.balance,\n          data.balancePart1,\n          data.balancePart2,\n          data.balancePart3,\n          data.numA,\n          data.numAPart1,\n          data.numAPart2,\n          data.numAPart3,\n          data.numB,\n          data.numBPart1,\n          data.numBPart2,\n          data.numBPart3,\n          data.numC,\n          data.numCPart1,\n          data.numCPart2,\n          data.numCPart3,\n          data.numD,\n          data.numDPart1,\n          data.numDPart2,\n          data.numDPart3,\n        ].join(',');\n        content += \"\\n\";\n\n        processed++;\n\n        if (filesArray.length === processed) {\n          const blob = new Blob([content], {type: \"text/plain;charset=utf-8\"});\n          FileSaver.saveAs(blob, \"behavioralData.csv\");\n        }\n      };\n      reader.readAsText(file);\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">Labnsc scripts</h1>\n        </header>\n\n        <h1>IOWA</h1>\n        <h3>IOWA Advantageous / Disadvantageous</h3>\n\n        <p>This uses multiple steps to convert your files:</p>\n        <div className=\"instructions\">\n          <p>\n            1 - S122, S111, S133, S144 will be erased\n          </p>\n          <p>\n            2 - Changes:\n            S 23 --> S122, S112 --> S111, S134 --> S133, S145 --> S144\n          </p>\n          <p>\n            3 - S111, S133 & S144 will have -2000 ms\n          </p>\n          <p>\n            4 - ConvertTriggers\n          </p>\n          <p>\n            5 - WinAndLoss (codes for WIN A, B, C, D & LOSS A, B, C, D)\n          </p>\n          <p>\n            6 - ParseInThree (+10 for second block, +20 for third block)\n          </p>\n        </div>\n\n        <p className=\"App-intro\">\n          Choose the <code>.vmrk</code> files you wish to convert\n        </p>\n\n        <p>\n          <input type=\"file\" id=\"input\" multiple onChange={this.handleFiles(parseOnSteroids)} />\n        </p>\n\n        <hr/>\n\n        <h3>IOWA behavior data</h3>\n        <p className=\"App-intro\">\n          Choose the <code>.csv</code> files\n        </p>\n\n        <p>\n          <input type=\"file\" id=\"input\" multiple onChange={this.handleBehaviorFiles} />\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}